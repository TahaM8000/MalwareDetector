def rabinSearch(pattern, text):
    # Calculate hash for the pattern
    pattern_hash = hash(pattern)

    # Calculate hash for each substring with the same length as the pattern
    substring_hashes = []
    for i in range(len(text) - len(pattern) + 1):
        substring_hashes.append(hash(text[i:i+len(pattern)]))

    # Find the index of the first match
    for i, substring_hash in enumerate(substring_hashes):
        if substring_hash == pattern_hash:
            if text[i:i+len(pattern)] == pattern:
                return i

    # If no match is found
    return -1


