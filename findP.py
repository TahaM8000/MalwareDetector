def n_gram(text, n):
    words = [f"{char1}{char2}" for char1, char2 in zip(text[::2], text[1::2])]
    ngrams = []
    n = n // 2
    for i in range(len(words)-n+1):
        ngrams.append("".join(w for w in words[i:i+n]))

    
    return ngrams
#--------------------------------------------------------------------
def WritePatterns(path,string):
    with open(path,'a') as f:
        f.write(f"{string}\n")
#--------------------------------------------------------------------
import os
import binascii


path = "test2/"

ngr = {}


for file_name in os.listdir(path):
    
    if file_name == "findP.py":
        continue

    file_path = os.path.join(path, file_name)

    with open(file_path, 'rb') as f:
        data = f.read()
    
    lenght = len(data) // 40
    print(lenght)

    hex = (binascii.hexlify(data)[0:lenght]).decode().upper()

    t =  n_gram(hex,150)
    # print(t)
    # count = 0
    # for line in t:
    #     WritePatterns(f"{file_name}pat.txt",f"{file_name},{count},{line}")
    #     count += 1
    ngr[file_name] = t



# common_strings = set(ngr[next(iter(ngr))])
# for value_list in ngr.values():
#     common_strings.intersection_update(value_list)

# print(common_strings)

for i in ngr:
    ngr[i] = list(set(ngr[i]))

from collections import Counter

values_list = [val for val_list in ngr.values() for val in val_list]


most_common_items = Counter(values_list).most_common(10)

print(most_common_items)